<?php

use TelegramBot\Api\Client;
use TelegramBot\Api\Types\Update;
use TelegramBot\Api\Types\Inline\InlineKeyboardMarkup;

class ServerManager
{
    private $token;
    private $link;
    private $bot;

    /**
     * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä ServerManager.
     *
     * @param string $token –¢–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API.
     * @param string $link –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞.
     * @param Client $bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegram.
     */
    public function __construct(string $token, string $link, Client $bot)
    {
        $this->token = $token;
        $this->link = $link;
        $this->bot = $bot;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–∞.
     *
     * @param string $method HTTP-–º–µ—Ç–æ–¥.
     * @param array $data –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤).
     * @return array –ú–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–∞.
     */
    private function getOptions(string $method, array $data = []): array
    {
        return [
            'http' => [
                'header' => "Content-Type: application/json\r\nAuthorization: Bearer {$this->token}\r\n",
                'method' => $method,
                'content' => json_encode($data),
            ],
        ];
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞.
     *
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
     * @throws Exception –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å.
     * @return string –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ.
     */
    public function handleServerDelete(int $serverId): string
    {
        $url = sprintf('%s/%d', $this->link, $serverId);
        $options = $this->getOptions('DELETE');
        return file_get_contents($url, false, stream_context_create($options));
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ä–≤–µ—Ä–∞.
     *
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.
     * @return string –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.
     */
    public function handleServerReboot(int $serverId): string
    {
        $url = sprintf('%s/%d/actions', $this->link, $serverId);
        $options = $this->getOptions('POST', ['type' => 'reboot']);
        return file_get_contents($url, false, stream_context_create($options));
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞.
     *
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.
     * @return string –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è.
     */
    public function sendServerPasswordResetRequest(int $serverId): string
    {
        $url = sprintf('%s/%d/actions', $this->link, $serverId);
        $options = $this->getOptions('POST', ['type' => 'password_reset']);
        return file_get_contents($url, false, stream_context_create($options));
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –≤–∏–¥–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
     *
     * @return string –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å.
     */
    public function handleServerListRequest(): string
    {
        $response = file_get_contents($this->link, false, stream_context_create([
            'http' => [
                'header' => "Content-Type: application/json\r\nAuthorization: Bearer {$this->token}\r\n",
            ],
        ]));

        $responseArray = json_decode($response, true) ?: [];
        $message = '';
        foreach ($responseArray['reglets'] as $server) {
            $message .= "ID: {$server['id']}\n";
            $message .= "–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: {$server['name']}\n";
            $message .= "–°—Ç–∞—Ç—É—Å: {$server['status']}\n";
            $message .= "IP-–∞–¥—Ä–µ—Å: {$server['ip']}\n\n";
        }

        return $message ?: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤.';
    }

    
    /**
    * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –±–æ—Ç–æ–º.
    *
    * @param Update $update –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏.
    * @throws Exception –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    * @return void
    */
    public function handleDefaultMessage(Update $update): void
    {
        $message = $update->getMessage();
        $chatId = $message->getChat()->getId();
        $text = $message->getText();
        $this->bot->sendMessage($chatId, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ' . $text);
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ typeAction, serverId –∏ variableAction.
     *
     * @param string $typeAction –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
     * @param int|null $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).
     * @param string|null $variableAction –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).
     * @return InlineKeyboardMarkup|null –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–ª–∏ null, –µ—Å–ª–∏ typeAction –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.
     */
    public function getKeyboard($typeAction, ?int $serverId = null, ?string $variableAction = null): ?InlineKeyboardMarkup
    {
        switch ($typeAction) {
            case 'DeleteOrReloadServer':
                return new InlineKeyboardMarkup([
                    [
                        ['text' => "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å", 'callback_data' => "reload_server_$serverId"],
                        ['text' => "‚ùå –£–¥–∞–ª–∏—Ç—å", 'callback_data' => "delete_server_$serverId"]
                    ],
                    [
                        ['text' => "‚ôªÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å root", 'callback_data' => "reset_password_server_$serverId"]
                    ]
                ]);

            case 'ConfirmOrCancel':
                return new InlineKeyboardMarkup([
                    [['text' => "‚úÖ –î–∞", 'callback_data' => "confirm_{$variableAction}_server_$serverId"],
                    ['text' => "‚ùå –ù–µ—Ç", 'callback_data' => "cancel_delete_server_$serverId"]]
                ]);

            default:
            case 'AllServers':
                return new InlineKeyboardMarkup([
                    [['text' => "–í—Å–µ —Å–µ—Ä–≤–µ—Ä–∞", 'callback_data' => 'all_servers']]
                ]);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     *
     * @param mixed $message –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞.
     * @throws Exception –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
     * @return void
     */
    public function sendStartMessage($message)
    {
        $toMessage = '–ü—Ä–∏–≤–µ—Ç. –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Reg.Ru.';
        $keyboard = $this->getKeyboard('AllServers');
        $this->bot->sendMessage($message->getChat()->getId(), $toMessage, null, false, null, $keyboard);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ —á–∞—Ç.
     *
     * @param int $chatId ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä—ã.
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏
     * "ID: xxx\nName: xxx\nStatus: xxx\nIP: xxx\n\n".
     * @throws Exception –ï—Å–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
     * @return void
     */
    public function pushServersList(int $chatId, string $serverList)
    {
        $servers = explode("\n\n", $serverList);
        foreach ($servers as $server) {
            preg_match('/ID: (\d+)/', $server, $matches);
            $serverId = $matches[1] ?? null;
            $keyboard = $this->getKeyboard('DeleteOrReloadServer', $serverId);
            $this->bot->sendMessage($chatId, $server, null, false, null, $keyboard);
        }
    }

    /**
     * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     *
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏
     * "ID: xxx\n–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: xxx\n–°—Ç–∞—Ç—É—Å: xxx\nIP: xxx\n\n".
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.
     * @param int $chatId ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
     * @param int $idMessage ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
     * @throws Exception –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–ø–∞—Ä—à–µ–Ω –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ.
     * @return void
     */
    public function resetPasswordServerChecked(string $serverList, int $serverId, int $chatId, int $idMessage)
    {
        preg_match('/ID: ' . $serverId . '\n–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: (.+)/', $serverList, $matches);
        $serverName = $matches[1] ?? '–Ω–µ –Ω–∞–π–¥–µ–Ω';
        $keyboard = $this->getKeyboard('ConfirmOrCancel', $serverId, 'reset');
        $this->bot->editMessageText($chatId, $idMessage, '–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å Root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? ' . PHP_EOL . $serverName . PHP_EOL . 'ID: ' . $serverId, null, false, $keyboard);
    }

    /**
     * –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.
     *
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "ID: xxx\nName: xxx\nStatus: xxx\nIP: xxx\n\n".
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.
     * @param int $chatId ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
     * @param int $idMessage ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
     * @throws Exception –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @return void
     */
    public function reloadServerChecked(string $serverList, int $serverId, int $chatId, int $idMessage)
    {
        preg_match('/ID: ' . $serverId . '\n–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: (.+)/', $serverList, $matches);
        $serverName = $matches[1] ?? '–Ω–µ –Ω–∞–π–¥–µ–Ω';
        $keyboard = $this->getKeyboard('ConfirmOrCancel', $serverId, 'reload');
        $this->bot->editMessageText($chatId, $idMessage, '–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä? ' . PHP_EOL . $serverName . PHP_EOL . 'ID: ' . $serverId, null, false, $keyboard);
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.
     *
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "ID: xxx\nName: xxx\nStatus: xxx\nIP: xxx\n\n".
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
     * @param int $chatId ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
     * @param int $idMessage ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
     * @throws Exception –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @return void
     */
    public function deleteServerChecked(string $serverList, int $serverId, int $chatId, int $idMessage)
    {
        preg_match('/ID: ' . $serverId . '\n–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: (.+)/', $serverList, $matches);
        $serverName = $matches[1] ?? '–Ω–µ –Ω–∞–π–¥–µ–Ω';
        $keyboard = $this->getKeyboard('ConfirmOrCancel', $serverId, 'delete');
        $this->bot->editMessageText($chatId, $idMessage, '–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä? ' . PHP_EOL . $serverName . PHP_EOL . 'ID: ' . $serverId, null, false, $keyboard);
    }

    /**
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø—É—Ç–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.
     *
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "ID: xxx\nName: xxx\nStatus: xxx\nIP: xxx\n\n".
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ.
     * @param int $chatId ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.
     * @param int $idMessage ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
     * @param string $type –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 'delete', 'reset' –∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏.
     * @throws Exception –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @return void
     */
    public function confirmServerAction(string $serverList, int $serverId, int $chatId, int $idMessage, string $type)
    {
        preg_match('/ID: ' . $serverId . '\n–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: (.+)/', $serverList, $matches);
        $serverName = $matches[1] ?? '–Ω–µ –Ω–∞–π–¥–µ–Ω';
        
        switch ($type) {
            case 'delete':
                $message = '–£–¥–∞–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä:';
                break;
            case 'reset':
                $message = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è —Å–µ—Ä–≤–µ—Ä–∞.'.PHP_EOL.'`–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –≤–∞—à e-mail –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å –Ω–æ–≤—ã–º root-–ø–∞—Ä–æ–ª–µ–º.`';
                break;
            default:
                $message = '–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä:';
                break;
        }
        
        $keyboard = $this->getKeyboard('AllServers');
        $this->bot->editMessageText($chatId, $idMessage, $message . PHP_EOL . $serverName . PHP_EOL . 'ID: ' . $serverId, 'Markdown', false, $keyboard);
        
        switch ($type) {
            case 'delete':
                $this->handleServerDelete($serverId);
                break;
            case 'reset':
                $this->sendServerPasswordResetRequest($serverId);
                break;
            default:
                $this->handleServerReboot($serverId);
                break;
        }
    }

    /**
     * –û—Ç–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
     *
     * @param int $serverId ID —Å–µ—Ä–≤–µ—Ä–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.
     * @param int $chatId ID —á–∞—Ç–∞, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @param int $idMessage ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
     * @param string $serverList –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "ID: xxx\nName: xxx\nStatus: xxx\nIP: xxx\n\n".
     * @return void
     */
    public function canceledServerActions(int $serverId, int $chatId, int $idMessage, string $serverList)
    {
        $serverInfo = preg_grep("/ID: $serverId/", explode("\n\n", $serverList));
        $keyboard = $this->getKeyboard('DeleteOrReloadServer', $serverId);
        $this->bot->editMessageText($chatId, $idMessage, reset($serverInfo), null, false, $keyboard);
    }
}